/*
 * This file is generated by jOOQ.
 */
package projektor.database.generated.tables.pojos;


import java.io.Serializable;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CodeCoverageStats implements Serializable {

    private static final long serialVersionUID = 446963489;

    private Long    id;
    private Long    codeCoverageRunId;
    private String  scope;
    private Integer statementCovered;
    private Integer statementMissed;
    private Integer lineCovered;
    private Integer lineMissed;
    private Integer branchCovered;
    private Integer branchMissed;

    public CodeCoverageStats() {}

    public CodeCoverageStats(CodeCoverageStats value) {
        this.id = value.id;
        this.codeCoverageRunId = value.codeCoverageRunId;
        this.scope = value.scope;
        this.statementCovered = value.statementCovered;
        this.statementMissed = value.statementMissed;
        this.lineCovered = value.lineCovered;
        this.lineMissed = value.lineMissed;
        this.branchCovered = value.branchCovered;
        this.branchMissed = value.branchMissed;
    }

    public CodeCoverageStats(
        Long    id,
        Long    codeCoverageRunId,
        String  scope,
        Integer statementCovered,
        Integer statementMissed,
        Integer lineCovered,
        Integer lineMissed,
        Integer branchCovered,
        Integer branchMissed
    ) {
        this.id = id;
        this.codeCoverageRunId = codeCoverageRunId;
        this.scope = scope;
        this.statementCovered = statementCovered;
        this.statementMissed = statementMissed;
        this.lineCovered = lineCovered;
        this.lineMissed = lineMissed;
        this.branchCovered = branchCovered;
        this.branchMissed = branchMissed;
    }

    public Long getId() {
        return this.id;
    }

    public CodeCoverageStats setId(Long id) {
        this.id = id;
        return this;
    }

    public Long getCodeCoverageRunId() {
        return this.codeCoverageRunId;
    }

    public CodeCoverageStats setCodeCoverageRunId(Long codeCoverageRunId) {
        this.codeCoverageRunId = codeCoverageRunId;
        return this;
    }

    public String getScope() {
        return this.scope;
    }

    public CodeCoverageStats setScope(String scope) {
        this.scope = scope;
        return this;
    }

    public Integer getStatementCovered() {
        return this.statementCovered;
    }

    public CodeCoverageStats setStatementCovered(Integer statementCovered) {
        this.statementCovered = statementCovered;
        return this;
    }

    public Integer getStatementMissed() {
        return this.statementMissed;
    }

    public CodeCoverageStats setStatementMissed(Integer statementMissed) {
        this.statementMissed = statementMissed;
        return this;
    }

    public Integer getLineCovered() {
        return this.lineCovered;
    }

    public CodeCoverageStats setLineCovered(Integer lineCovered) {
        this.lineCovered = lineCovered;
        return this;
    }

    public Integer getLineMissed() {
        return this.lineMissed;
    }

    public CodeCoverageStats setLineMissed(Integer lineMissed) {
        this.lineMissed = lineMissed;
        return this;
    }

    public Integer getBranchCovered() {
        return this.branchCovered;
    }

    public CodeCoverageStats setBranchCovered(Integer branchCovered) {
        this.branchCovered = branchCovered;
        return this;
    }

    public Integer getBranchMissed() {
        return this.branchMissed;
    }

    public CodeCoverageStats setBranchMissed(Integer branchMissed) {
        this.branchMissed = branchMissed;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CodeCoverageStats other = (CodeCoverageStats) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (codeCoverageRunId == null) {
            if (other.codeCoverageRunId != null)
                return false;
        }
        else if (!codeCoverageRunId.equals(other.codeCoverageRunId))
            return false;
        if (scope == null) {
            if (other.scope != null)
                return false;
        }
        else if (!scope.equals(other.scope))
            return false;
        if (statementCovered == null) {
            if (other.statementCovered != null)
                return false;
        }
        else if (!statementCovered.equals(other.statementCovered))
            return false;
        if (statementMissed == null) {
            if (other.statementMissed != null)
                return false;
        }
        else if (!statementMissed.equals(other.statementMissed))
            return false;
        if (lineCovered == null) {
            if (other.lineCovered != null)
                return false;
        }
        else if (!lineCovered.equals(other.lineCovered))
            return false;
        if (lineMissed == null) {
            if (other.lineMissed != null)
                return false;
        }
        else if (!lineMissed.equals(other.lineMissed))
            return false;
        if (branchCovered == null) {
            if (other.branchCovered != null)
                return false;
        }
        else if (!branchCovered.equals(other.branchCovered))
            return false;
        if (branchMissed == null) {
            if (other.branchMissed != null)
                return false;
        }
        else if (!branchMissed.equals(other.branchMissed))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.codeCoverageRunId == null) ? 0 : this.codeCoverageRunId.hashCode());
        result = prime * result + ((this.scope == null) ? 0 : this.scope.hashCode());
        result = prime * result + ((this.statementCovered == null) ? 0 : this.statementCovered.hashCode());
        result = prime * result + ((this.statementMissed == null) ? 0 : this.statementMissed.hashCode());
        result = prime * result + ((this.lineCovered == null) ? 0 : this.lineCovered.hashCode());
        result = prime * result + ((this.lineMissed == null) ? 0 : this.lineMissed.hashCode());
        result = prime * result + ((this.branchCovered == null) ? 0 : this.branchCovered.hashCode());
        result = prime * result + ((this.branchMissed == null) ? 0 : this.branchMissed.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CodeCoverageStats (");

        sb.append(id);
        sb.append(", ").append(codeCoverageRunId);
        sb.append(", ").append(scope);
        sb.append(", ").append(statementCovered);
        sb.append(", ").append(statementMissed);
        sb.append(", ").append(lineCovered);
        sb.append(", ").append(lineMissed);
        sb.append(", ").append(branchCovered);
        sb.append(", ").append(branchMissed);

        sb.append(")");
        return sb.toString();
    }
}
