/*
 * This file is generated by jOOQ.
 */
package projektor.database.generated.tables.records;


import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import projektor.database.generated.tables.PerformanceResults;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PerformanceResultsRecord extends UpdatableRecordImpl<PerformanceResultsRecord> implements Record9<Long, Long, String, String, Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.performance_results.id</code>.
     */
    public PerformanceResultsRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.performance_results.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.performance_results.test_run_id</code>.
     */
    public PerformanceResultsRecord setTestRunId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.performance_results.test_run_id</code>.
     */
    public Long getTestRunId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.performance_results.test_run_public_id</code>.
     */
    public PerformanceResultsRecord setTestRunPublicId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.performance_results.test_run_public_id</code>.
     */
    public String getTestRunPublicId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.performance_results.name</code>.
     */
    public PerformanceResultsRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.performance_results.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.performance_results.request_count</code>.
     */
    public PerformanceResultsRecord setRequestCount(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.performance_results.request_count</code>.
     */
    public Long getRequestCount() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.performance_results.requests_per_second</code>.
     */
    public PerformanceResultsRecord setRequestsPerSecond(BigDecimal value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.performance_results.requests_per_second</code>.
     */
    public BigDecimal getRequestsPerSecond() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>public.performance_results.average</code>.
     */
    public PerformanceResultsRecord setAverage(BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.performance_results.average</code>.
     */
    public BigDecimal getAverage() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>public.performance_results.maximum</code>.
     */
    public PerformanceResultsRecord setMaximum(BigDecimal value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.performance_results.maximum</code>.
     */
    public BigDecimal getMaximum() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>public.performance_results.p95</code>.
     */
    public PerformanceResultsRecord setP95(BigDecimal value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.performance_results.p95</code>.
     */
    public BigDecimal getP95() {
        return (BigDecimal) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Long, String, String, Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, Long, String, String, Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PerformanceResults.PERFORMANCE_RESULTS.ID;
    }

    @Override
    public Field<Long> field2() {
        return PerformanceResults.PERFORMANCE_RESULTS.TEST_RUN_ID;
    }

    @Override
    public Field<String> field3() {
        return PerformanceResults.PERFORMANCE_RESULTS.TEST_RUN_PUBLIC_ID;
    }

    @Override
    public Field<String> field4() {
        return PerformanceResults.PERFORMANCE_RESULTS.NAME;
    }

    @Override
    public Field<Long> field5() {
        return PerformanceResults.PERFORMANCE_RESULTS.REQUEST_COUNT;
    }

    @Override
    public Field<BigDecimal> field6() {
        return PerformanceResults.PERFORMANCE_RESULTS.REQUESTS_PER_SECOND;
    }

    @Override
    public Field<BigDecimal> field7() {
        return PerformanceResults.PERFORMANCE_RESULTS.AVERAGE;
    }

    @Override
    public Field<BigDecimal> field8() {
        return PerformanceResults.PERFORMANCE_RESULTS.MAXIMUM;
    }

    @Override
    public Field<BigDecimal> field9() {
        return PerformanceResults.PERFORMANCE_RESULTS.P95;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getTestRunId();
    }

    @Override
    public String component3() {
        return getTestRunPublicId();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public Long component5() {
        return getRequestCount();
    }

    @Override
    public BigDecimal component6() {
        return getRequestsPerSecond();
    }

    @Override
    public BigDecimal component7() {
        return getAverage();
    }

    @Override
    public BigDecimal component8() {
        return getMaximum();
    }

    @Override
    public BigDecimal component9() {
        return getP95();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getTestRunId();
    }

    @Override
    public String value3() {
        return getTestRunPublicId();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public Long value5() {
        return getRequestCount();
    }

    @Override
    public BigDecimal value6() {
        return getRequestsPerSecond();
    }

    @Override
    public BigDecimal value7() {
        return getAverage();
    }

    @Override
    public BigDecimal value8() {
        return getMaximum();
    }

    @Override
    public BigDecimal value9() {
        return getP95();
    }

    @Override
    public PerformanceResultsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PerformanceResultsRecord value2(Long value) {
        setTestRunId(value);
        return this;
    }

    @Override
    public PerformanceResultsRecord value3(String value) {
        setTestRunPublicId(value);
        return this;
    }

    @Override
    public PerformanceResultsRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public PerformanceResultsRecord value5(Long value) {
        setRequestCount(value);
        return this;
    }

    @Override
    public PerformanceResultsRecord value6(BigDecimal value) {
        setRequestsPerSecond(value);
        return this;
    }

    @Override
    public PerformanceResultsRecord value7(BigDecimal value) {
        setAverage(value);
        return this;
    }

    @Override
    public PerformanceResultsRecord value8(BigDecimal value) {
        setMaximum(value);
        return this;
    }

    @Override
    public PerformanceResultsRecord value9(BigDecimal value) {
        setP95(value);
        return this;
    }

    @Override
    public PerformanceResultsRecord values(Long value1, Long value2, String value3, String value4, Long value5, BigDecimal value6, BigDecimal value7, BigDecimal value8, BigDecimal value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PerformanceResultsRecord
     */
    public PerformanceResultsRecord() {
        super(PerformanceResults.PERFORMANCE_RESULTS);
    }

    /**
     * Create a detached, initialised PerformanceResultsRecord
     */
    public PerformanceResultsRecord(Long id, Long testRunId, String testRunPublicId, String name, Long requestCount, BigDecimal requestsPerSecond, BigDecimal average, BigDecimal maximum, BigDecimal p95) {
        super(PerformanceResults.PERFORMANCE_RESULTS);

        setId(id);
        setTestRunId(testRunId);
        setTestRunPublicId(testRunPublicId);
        setName(name);
        setRequestCount(requestCount);
        setRequestsPerSecond(requestsPerSecond);
        setAverage(average);
        setMaximum(maximum);
        setP95(p95);
    }
}
