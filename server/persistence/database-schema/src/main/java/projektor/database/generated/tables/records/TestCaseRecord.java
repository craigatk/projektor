/*
 * This file is generated by jOOQ.
 */
package projektor.database.generated.tables.records;


import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;

import projektor.database.generated.tables.TestCase;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestCaseRecord extends UpdatableRecordImpl<TestCaseRecord> implements Record9<Long, Long, Integer, String, String, String, BigDecimal, Boolean, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.test_case.id</code>.
     */
    public TestCaseRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.test_case.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.test_case.test_suite_id</code>.
     */
    public TestCaseRecord setTestSuiteId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.test_case.test_suite_id</code>.
     */
    public Long getTestSuiteId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.test_case.idx</code>.
     */
    public TestCaseRecord setIdx(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.test_case.idx</code>.
     */
    public Integer getIdx() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.test_case.name</code>.
     */
    public TestCaseRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.test_case.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.test_case.package_name</code>.
     */
    public TestCaseRecord setPackageName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.test_case.package_name</code>.
     */
    public String getPackageName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.test_case.class_name</code>.
     */
    public TestCaseRecord setClassName(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.test_case.class_name</code>.
     */
    public String getClassName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.test_case.duration</code>.
     */
    public TestCaseRecord setDuration(BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.test_case.duration</code>.
     */
    public BigDecimal getDuration() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>public.test_case.passed</code>.
     */
    public TestCaseRecord setPassed(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.test_case.passed</code>.
     */
    public Boolean getPassed() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>public.test_case.skipped</code>.
     */
    public TestCaseRecord setSkipped(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.test_case.skipped</code>.
     */
    public Boolean getSkipped() {
        return (Boolean) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Long, Integer, String, String, String, BigDecimal, Boolean, Boolean> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, Long, Integer, String, String, String, BigDecimal, Boolean, Boolean> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TestCase.TEST_CASE.ID;
    }

    @Override
    public Field<Long> field2() {
        return TestCase.TEST_CASE.TEST_SUITE_ID;
    }

    @Override
    public Field<Integer> field3() {
        return TestCase.TEST_CASE.IDX;
    }

    @Override
    public Field<String> field4() {
        return TestCase.TEST_CASE.NAME;
    }

    @Override
    public Field<String> field5() {
        return TestCase.TEST_CASE.PACKAGE_NAME;
    }

    @Override
    public Field<String> field6() {
        return TestCase.TEST_CASE.CLASS_NAME;
    }

    @Override
    public Field<BigDecimal> field7() {
        return TestCase.TEST_CASE.DURATION;
    }

    @Override
    public Field<Boolean> field8() {
        return TestCase.TEST_CASE.PASSED;
    }

    @Override
    public Field<Boolean> field9() {
        return TestCase.TEST_CASE.SKIPPED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getTestSuiteId();
    }

    @Override
    public Integer component3() {
        return getIdx();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getPackageName();
    }

    @Override
    public String component6() {
        return getClassName();
    }

    @Override
    public BigDecimal component7() {
        return getDuration();
    }

    @Override
    public Boolean component8() {
        return getPassed();
    }

    @Override
    public Boolean component9() {
        return getSkipped();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getTestSuiteId();
    }

    @Override
    public Integer value3() {
        return getIdx();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getPackageName();
    }

    @Override
    public String value6() {
        return getClassName();
    }

    @Override
    public BigDecimal value7() {
        return getDuration();
    }

    @Override
    public Boolean value8() {
        return getPassed();
    }

    @Override
    public Boolean value9() {
        return getSkipped();
    }

    @Override
    public TestCaseRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TestCaseRecord value2(Long value) {
        setTestSuiteId(value);
        return this;
    }

    @Override
    public TestCaseRecord value3(Integer value) {
        setIdx(value);
        return this;
    }

    @Override
    public TestCaseRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public TestCaseRecord value5(String value) {
        setPackageName(value);
        return this;
    }

    @Override
    public TestCaseRecord value6(String value) {
        setClassName(value);
        return this;
    }

    @Override
    public TestCaseRecord value7(BigDecimal value) {
        setDuration(value);
        return this;
    }

    @Override
    public TestCaseRecord value8(Boolean value) {
        setPassed(value);
        return this;
    }

    @Override
    public TestCaseRecord value9(Boolean value) {
        setSkipped(value);
        return this;
    }

    @Override
    public TestCaseRecord values(Long value1, Long value2, Integer value3, String value4, String value5, String value6, BigDecimal value7, Boolean value8, Boolean value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TestCaseRecord
     */
    public TestCaseRecord() {
        super(TestCase.TEST_CASE);
    }

    /**
     * Create a detached, initialised TestCaseRecord
     */
    public TestCaseRecord(Long id, Long testSuiteId, Integer idx, String name, String packageName, String className, BigDecimal duration, Boolean passed, Boolean skipped) {
        super(TestCase.TEST_CASE);

        setId(id);
        setTestSuiteId(testSuiteId);
        setIdx(idx);
        setName(name);
        setPackageName(packageName);
        setClassName(className);
        setDuration(duration);
        setPassed(passed);
        setSkipped(skipped);
    }
}
