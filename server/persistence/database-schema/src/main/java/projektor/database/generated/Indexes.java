/*
 * This file is generated by jOOQ.
 */
package projektor.database.generated;


import javax.annotation.processing.Generated;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;

import projektor.database.generated.tables.CodeCoverageGroup;
import projektor.database.generated.tables.CodeCoverageRun;
import projektor.database.generated.tables.CodeCoverageStats;
import projektor.database.generated.tables.GitMetadata;
import projektor.database.generated.tables.GitRepository;
import projektor.database.generated.tables.ProcessingFailure;
import projektor.database.generated.tables.ResultsMetadata;
import projektor.database.generated.tables.ResultsProcessing;
import projektor.database.generated.tables.TestCase;
import projektor.database.generated.tables.TestFailure;
import projektor.database.generated.tables.TestRun;
import projektor.database.generated.tables.TestRunAttachment;
import projektor.database.generated.tables.TestSuite;


/**
 * A class modelling indexes of tables of the <code>public</code> schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index CODE_COVERAGE_GROUP_CODE_COVERAGE_RUN_ID_IDX = Indexes0.CODE_COVERAGE_GROUP_CODE_COVERAGE_RUN_ID_IDX;
    public static final Index CODE_COVERAGE_RUN_TEST_RUN_PUBLIC_ID_IDX = Indexes0.CODE_COVERAGE_RUN_TEST_RUN_PUBLIC_ID_IDX;
    public static final Index CODE_COVERAGE_STATS_CODE_COVERAGE_RUN_ID_IDX = Indexes0.CODE_COVERAGE_STATS_CODE_COVERAGE_RUN_ID_IDX;
    public static final Index GIT_METADATA_IS_MAIN_BRANCH_IDX = Indexes0.GIT_METADATA_IS_MAIN_BRANCH_IDX;
    public static final Index GIT_METADATA_PROJECT_NAME_IDX = Indexes0.GIT_METADATA_PROJECT_NAME_IDX;
    public static final Index GIT_METADATA_REPO_NAME_IDX = Indexes0.GIT_METADATA_REPO_NAME_IDX;
    public static final Index GIT_METADATA_TEST_RUN_ID_IDX = Indexes0.GIT_METADATA_TEST_RUN_ID_IDX;
    public static final Index GIT_REPOSITORY_ORG_NAME_IDX = Indexes0.GIT_REPOSITORY_ORG_NAME_IDX;
    public static final Index IDX_PROCESSING_FAILURE_PUBLIC_ID = Indexes0.IDX_PROCESSING_FAILURE_PUBLIC_ID;
    public static final Index RESULTS_METADATA_TEST_RUN_ID_IDX = Indexes0.RESULTS_METADATA_TEST_RUN_ID_IDX;
    public static final Index IDX_RESULTS_PROCESSING_STATUS = Indexes0.IDX_RESULTS_PROCESSING_STATUS;
    public static final Index IDX_TEST_CASE_DURATION = Indexes0.IDX_TEST_CASE_DURATION;
    public static final Index IDX_TEST_CASE_IDX = Indexes0.IDX_TEST_CASE_IDX;
    public static final Index IDX_TEST_CASE_PASSED = Indexes0.IDX_TEST_CASE_PASSED;
    public static final Index IDX_TEST_CASE_TEST_SUITE_ID = Indexes0.IDX_TEST_CASE_TEST_SUITE_ID;
    public static final Index IDX_TEST_FAILURE_TEST_CASE_ID = Indexes0.IDX_TEST_FAILURE_TEST_CASE_ID;
    public static final Index IDX_TEST_RUN_PUBLIC_ID = Indexes0.IDX_TEST_RUN_PUBLIC_ID;
    public static final Index IDX_ATTACHMENT_TEST_RUN_ID = Indexes0.IDX_ATTACHMENT_TEST_RUN_ID;
    public static final Index IDX_TEST_SUITE_IDX = Indexes0.IDX_TEST_SUITE_IDX;
    public static final Index IDX_TEST_SUITE_TEST_RUN_ID = Indexes0.IDX_TEST_SUITE_TEST_RUN_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index CODE_COVERAGE_GROUP_CODE_COVERAGE_RUN_ID_IDX = Internal.createIndex("code_coverage_group_code_coverage_run_id_idx", CodeCoverageGroup.CODE_COVERAGE_GROUP, new OrderField[] { CodeCoverageGroup.CODE_COVERAGE_GROUP.CODE_COVERAGE_RUN_ID }, false);
        public static Index CODE_COVERAGE_RUN_TEST_RUN_PUBLIC_ID_IDX = Internal.createIndex("code_coverage_run_test_run_public_id_idx", CodeCoverageRun.CODE_COVERAGE_RUN, new OrderField[] { CodeCoverageRun.CODE_COVERAGE_RUN.TEST_RUN_PUBLIC_ID }, false);
        public static Index CODE_COVERAGE_STATS_CODE_COVERAGE_RUN_ID_IDX = Internal.createIndex("code_coverage_stats_code_coverage_run_id_idx", CodeCoverageStats.CODE_COVERAGE_STATS, new OrderField[] { CodeCoverageStats.CODE_COVERAGE_STATS.CODE_COVERAGE_RUN_ID }, false);
        public static Index GIT_METADATA_IS_MAIN_BRANCH_IDX = Internal.createIndex("git_metadata_is_main_branch_idx", GitMetadata.GIT_METADATA, new OrderField[] { GitMetadata.GIT_METADATA.IS_MAIN_BRANCH }, false);
        public static Index GIT_METADATA_PROJECT_NAME_IDX = Internal.createIndex("git_metadata_project_name_idx", GitMetadata.GIT_METADATA, new OrderField[] { GitMetadata.GIT_METADATA.PROJECT_NAME }, false);
        public static Index GIT_METADATA_REPO_NAME_IDX = Internal.createIndex("git_metadata_repo_name_idx", GitMetadata.GIT_METADATA, new OrderField[] { GitMetadata.GIT_METADATA.REPO_NAME }, false);
        public static Index GIT_METADATA_TEST_RUN_ID_IDX = Internal.createIndex("git_metadata_test_run_id_idx", GitMetadata.GIT_METADATA, new OrderField[] { GitMetadata.GIT_METADATA.TEST_RUN_ID }, false);
        public static Index GIT_REPOSITORY_ORG_NAME_IDX = Internal.createIndex("git_repository_org_name_idx", GitRepository.GIT_REPOSITORY, new OrderField[] { GitRepository.GIT_REPOSITORY.ORG_NAME }, false);
        public static Index IDX_PROCESSING_FAILURE_PUBLIC_ID = Internal.createIndex("idx_processing_failure_public_id", ProcessingFailure.PROCESSING_FAILURE, new OrderField[] { ProcessingFailure.PROCESSING_FAILURE.PUBLIC_ID }, false);
        public static Index RESULTS_METADATA_TEST_RUN_ID_IDX = Internal.createIndex("results_metadata_test_run_id_idx", ResultsMetadata.RESULTS_METADATA, new OrderField[] { ResultsMetadata.RESULTS_METADATA.TEST_RUN_ID }, false);
        public static Index IDX_RESULTS_PROCESSING_STATUS = Internal.createIndex("idx_results_processing_status", ResultsProcessing.RESULTS_PROCESSING, new OrderField[] { ResultsProcessing.RESULTS_PROCESSING.STATUS }, false);
        public static Index IDX_TEST_CASE_DURATION = Internal.createIndex("idx_test_case_duration", TestCase.TEST_CASE, new OrderField[] { TestCase.TEST_CASE.DURATION }, false);
        public static Index IDX_TEST_CASE_IDX = Internal.createIndex("idx_test_case_idx", TestCase.TEST_CASE, new OrderField[] { TestCase.TEST_CASE.IDX }, false);
        public static Index IDX_TEST_CASE_PASSED = Internal.createIndex("idx_test_case_passed", TestCase.TEST_CASE, new OrderField[] { TestCase.TEST_CASE.PASSED }, false);
        public static Index IDX_TEST_CASE_TEST_SUITE_ID = Internal.createIndex("idx_test_case_test_suite_id", TestCase.TEST_CASE, new OrderField[] { TestCase.TEST_CASE.TEST_SUITE_ID }, false);
        public static Index IDX_TEST_FAILURE_TEST_CASE_ID = Internal.createIndex("idx_test_failure_test_case_id", TestFailure.TEST_FAILURE, new OrderField[] { TestFailure.TEST_FAILURE.TEST_CASE_ID }, false);
        public static Index IDX_TEST_RUN_PUBLIC_ID = Internal.createIndex("idx_test_run_public_id", TestRun.TEST_RUN, new OrderField[] { TestRun.TEST_RUN.PUBLIC_ID }, false);
        public static Index IDX_ATTACHMENT_TEST_RUN_ID = Internal.createIndex("idx_attachment_test_run_id", TestRunAttachment.TEST_RUN_ATTACHMENT, new OrderField[] { TestRunAttachment.TEST_RUN_ATTACHMENT.TEST_RUN_PUBLIC_ID }, false);
        public static Index IDX_TEST_SUITE_IDX = Internal.createIndex("idx_test_suite_idx", TestSuite.TEST_SUITE, new OrderField[] { TestSuite.TEST_SUITE.IDX }, false);
        public static Index IDX_TEST_SUITE_TEST_RUN_ID = Internal.createIndex("idx_test_suite_test_run_id", TestSuite.TEST_SUITE, new OrderField[] { TestSuite.TEST_SUITE.TEST_RUN_ID }, false);
    }
}
