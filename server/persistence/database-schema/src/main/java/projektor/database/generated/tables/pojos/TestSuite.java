/*
 * This file is generated by jOOQ.
 */
package projektor.database.generated.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TestSuite implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private Long testRunId;
    private Integer idx;
    private String packageName;
    private String className;
    private Integer testCount;
    private Integer passingCount;
    private Integer skippedCount;
    private Integer failureCount;
    private LocalDateTime startTs;
    private String hostname;
    private BigDecimal duration;
    private String systemOut;
    private String systemErr;
    private Boolean hasSystemOut;
    private Boolean hasSystemErr;
    private Long testSuiteGroupId;
    private String fileName;

    public TestSuite() {}

    public TestSuite(TestSuite value) {
        this.id = value.id;
        this.testRunId = value.testRunId;
        this.idx = value.idx;
        this.packageName = value.packageName;
        this.className = value.className;
        this.testCount = value.testCount;
        this.passingCount = value.passingCount;
        this.skippedCount = value.skippedCount;
        this.failureCount = value.failureCount;
        this.startTs = value.startTs;
        this.hostname = value.hostname;
        this.duration = value.duration;
        this.systemOut = value.systemOut;
        this.systemErr = value.systemErr;
        this.hasSystemOut = value.hasSystemOut;
        this.hasSystemErr = value.hasSystemErr;
        this.testSuiteGroupId = value.testSuiteGroupId;
        this.fileName = value.fileName;
    }

    public TestSuite(
        Long id,
        Long testRunId,
        Integer idx,
        String packageName,
        String className,
        Integer testCount,
        Integer passingCount,
        Integer skippedCount,
        Integer failureCount,
        LocalDateTime startTs,
        String hostname,
        BigDecimal duration,
        String systemOut,
        String systemErr,
        Boolean hasSystemOut,
        Boolean hasSystemErr,
        Long testSuiteGroupId,
        String fileName
    ) {
        this.id = id;
        this.testRunId = testRunId;
        this.idx = idx;
        this.packageName = packageName;
        this.className = className;
        this.testCount = testCount;
        this.passingCount = passingCount;
        this.skippedCount = skippedCount;
        this.failureCount = failureCount;
        this.startTs = startTs;
        this.hostname = hostname;
        this.duration = duration;
        this.systemOut = systemOut;
        this.systemErr = systemErr;
        this.hasSystemOut = hasSystemOut;
        this.hasSystemErr = hasSystemErr;
        this.testSuiteGroupId = testSuiteGroupId;
        this.fileName = fileName;
    }

    /**
     * Getter for <code>public.test_suite.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.test_suite.id</code>.
     */
    public TestSuite setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.test_suite.test_run_id</code>.
     */
    public Long getTestRunId() {
        return this.testRunId;
    }

    /**
     * Setter for <code>public.test_suite.test_run_id</code>.
     */
    public TestSuite setTestRunId(Long testRunId) {
        this.testRunId = testRunId;
        return this;
    }

    /**
     * Getter for <code>public.test_suite.idx</code>.
     */
    public Integer getIdx() {
        return this.idx;
    }

    /**
     * Setter for <code>public.test_suite.idx</code>.
     */
    public TestSuite setIdx(Integer idx) {
        this.idx = idx;
        return this;
    }

    /**
     * Getter for <code>public.test_suite.package_name</code>.
     */
    public String getPackageName() {
        return this.packageName;
    }

    /**
     * Setter for <code>public.test_suite.package_name</code>.
     */
    public TestSuite setPackageName(String packageName) {
        this.packageName = packageName;
        return this;
    }

    /**
     * Getter for <code>public.test_suite.class_name</code>.
     */
    public String getClassName() {
        return this.className;
    }

    /**
     * Setter for <code>public.test_suite.class_name</code>.
     */
    public TestSuite setClassName(String className) {
        this.className = className;
        return this;
    }

    /**
     * Getter for <code>public.test_suite.test_count</code>.
     */
    public Integer getTestCount() {
        return this.testCount;
    }

    /**
     * Setter for <code>public.test_suite.test_count</code>.
     */
    public TestSuite setTestCount(Integer testCount) {
        this.testCount = testCount;
        return this;
    }

    /**
     * Getter for <code>public.test_suite.passing_count</code>.
     */
    public Integer getPassingCount() {
        return this.passingCount;
    }

    /**
     * Setter for <code>public.test_suite.passing_count</code>.
     */
    public TestSuite setPassingCount(Integer passingCount) {
        this.passingCount = passingCount;
        return this;
    }

    /**
     * Getter for <code>public.test_suite.skipped_count</code>.
     */
    public Integer getSkippedCount() {
        return this.skippedCount;
    }

    /**
     * Setter for <code>public.test_suite.skipped_count</code>.
     */
    public TestSuite setSkippedCount(Integer skippedCount) {
        this.skippedCount = skippedCount;
        return this;
    }

    /**
     * Getter for <code>public.test_suite.failure_count</code>.
     */
    public Integer getFailureCount() {
        return this.failureCount;
    }

    /**
     * Setter for <code>public.test_suite.failure_count</code>.
     */
    public TestSuite setFailureCount(Integer failureCount) {
        this.failureCount = failureCount;
        return this;
    }

    /**
     * Getter for <code>public.test_suite.start_ts</code>.
     */
    public LocalDateTime getStartTs() {
        return this.startTs;
    }

    /**
     * Setter for <code>public.test_suite.start_ts</code>.
     */
    public TestSuite setStartTs(LocalDateTime startTs) {
        this.startTs = startTs;
        return this;
    }

    /**
     * Getter for <code>public.test_suite.hostname</code>.
     */
    public String getHostname() {
        return this.hostname;
    }

    /**
     * Setter for <code>public.test_suite.hostname</code>.
     */
    public TestSuite setHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }

    /**
     * Getter for <code>public.test_suite.duration</code>.
     */
    public BigDecimal getDuration() {
        return this.duration;
    }

    /**
     * Setter for <code>public.test_suite.duration</code>.
     */
    public TestSuite setDuration(BigDecimal duration) {
        this.duration = duration;
        return this;
    }

    /**
     * Getter for <code>public.test_suite.system_out</code>.
     */
    public String getSystemOut() {
        return this.systemOut;
    }

    /**
     * Setter for <code>public.test_suite.system_out</code>.
     */
    public TestSuite setSystemOut(String systemOut) {
        this.systemOut = systemOut;
        return this;
    }

    /**
     * Getter for <code>public.test_suite.system_err</code>.
     */
    public String getSystemErr() {
        return this.systemErr;
    }

    /**
     * Setter for <code>public.test_suite.system_err</code>.
     */
    public TestSuite setSystemErr(String systemErr) {
        this.systemErr = systemErr;
        return this;
    }

    /**
     * Getter for <code>public.test_suite.has_system_out</code>.
     */
    public Boolean getHasSystemOut() {
        return this.hasSystemOut;
    }

    /**
     * Setter for <code>public.test_suite.has_system_out</code>.
     */
    public TestSuite setHasSystemOut(Boolean hasSystemOut) {
        this.hasSystemOut = hasSystemOut;
        return this;
    }

    /**
     * Getter for <code>public.test_suite.has_system_err</code>.
     */
    public Boolean getHasSystemErr() {
        return this.hasSystemErr;
    }

    /**
     * Setter for <code>public.test_suite.has_system_err</code>.
     */
    public TestSuite setHasSystemErr(Boolean hasSystemErr) {
        this.hasSystemErr = hasSystemErr;
        return this;
    }

    /**
     * Getter for <code>public.test_suite.test_suite_group_id</code>.
     */
    public Long getTestSuiteGroupId() {
        return this.testSuiteGroupId;
    }

    /**
     * Setter for <code>public.test_suite.test_suite_group_id</code>.
     */
    public TestSuite setTestSuiteGroupId(Long testSuiteGroupId) {
        this.testSuiteGroupId = testSuiteGroupId;
        return this;
    }

    /**
     * Getter for <code>public.test_suite.file_name</code>.
     */
    public String getFileName() {
        return this.fileName;
    }

    /**
     * Setter for <code>public.test_suite.file_name</code>.
     */
    public TestSuite setFileName(String fileName) {
        this.fileName = fileName;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TestSuite other = (TestSuite) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.testRunId == null) {
            if (other.testRunId != null)
                return false;
        }
        else if (!this.testRunId.equals(other.testRunId))
            return false;
        if (this.idx == null) {
            if (other.idx != null)
                return false;
        }
        else if (!this.idx.equals(other.idx))
            return false;
        if (this.packageName == null) {
            if (other.packageName != null)
                return false;
        }
        else if (!this.packageName.equals(other.packageName))
            return false;
        if (this.className == null) {
            if (other.className != null)
                return false;
        }
        else if (!this.className.equals(other.className))
            return false;
        if (this.testCount == null) {
            if (other.testCount != null)
                return false;
        }
        else if (!this.testCount.equals(other.testCount))
            return false;
        if (this.passingCount == null) {
            if (other.passingCount != null)
                return false;
        }
        else if (!this.passingCount.equals(other.passingCount))
            return false;
        if (this.skippedCount == null) {
            if (other.skippedCount != null)
                return false;
        }
        else if (!this.skippedCount.equals(other.skippedCount))
            return false;
        if (this.failureCount == null) {
            if (other.failureCount != null)
                return false;
        }
        else if (!this.failureCount.equals(other.failureCount))
            return false;
        if (this.startTs == null) {
            if (other.startTs != null)
                return false;
        }
        else if (!this.startTs.equals(other.startTs))
            return false;
        if (this.hostname == null) {
            if (other.hostname != null)
                return false;
        }
        else if (!this.hostname.equals(other.hostname))
            return false;
        if (this.duration == null) {
            if (other.duration != null)
                return false;
        }
        else if (!this.duration.equals(other.duration))
            return false;
        if (this.systemOut == null) {
            if (other.systemOut != null)
                return false;
        }
        else if (!this.systemOut.equals(other.systemOut))
            return false;
        if (this.systemErr == null) {
            if (other.systemErr != null)
                return false;
        }
        else if (!this.systemErr.equals(other.systemErr))
            return false;
        if (this.hasSystemOut == null) {
            if (other.hasSystemOut != null)
                return false;
        }
        else if (!this.hasSystemOut.equals(other.hasSystemOut))
            return false;
        if (this.hasSystemErr == null) {
            if (other.hasSystemErr != null)
                return false;
        }
        else if (!this.hasSystemErr.equals(other.hasSystemErr))
            return false;
        if (this.testSuiteGroupId == null) {
            if (other.testSuiteGroupId != null)
                return false;
        }
        else if (!this.testSuiteGroupId.equals(other.testSuiteGroupId))
            return false;
        if (this.fileName == null) {
            if (other.fileName != null)
                return false;
        }
        else if (!this.fileName.equals(other.fileName))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.testRunId == null) ? 0 : this.testRunId.hashCode());
        result = prime * result + ((this.idx == null) ? 0 : this.idx.hashCode());
        result = prime * result + ((this.packageName == null) ? 0 : this.packageName.hashCode());
        result = prime * result + ((this.className == null) ? 0 : this.className.hashCode());
        result = prime * result + ((this.testCount == null) ? 0 : this.testCount.hashCode());
        result = prime * result + ((this.passingCount == null) ? 0 : this.passingCount.hashCode());
        result = prime * result + ((this.skippedCount == null) ? 0 : this.skippedCount.hashCode());
        result = prime * result + ((this.failureCount == null) ? 0 : this.failureCount.hashCode());
        result = prime * result + ((this.startTs == null) ? 0 : this.startTs.hashCode());
        result = prime * result + ((this.hostname == null) ? 0 : this.hostname.hashCode());
        result = prime * result + ((this.duration == null) ? 0 : this.duration.hashCode());
        result = prime * result + ((this.systemOut == null) ? 0 : this.systemOut.hashCode());
        result = prime * result + ((this.systemErr == null) ? 0 : this.systemErr.hashCode());
        result = prime * result + ((this.hasSystemOut == null) ? 0 : this.hasSystemOut.hashCode());
        result = prime * result + ((this.hasSystemErr == null) ? 0 : this.hasSystemErr.hashCode());
        result = prime * result + ((this.testSuiteGroupId == null) ? 0 : this.testSuiteGroupId.hashCode());
        result = prime * result + ((this.fileName == null) ? 0 : this.fileName.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TestSuite (");

        sb.append(id);
        sb.append(", ").append(testRunId);
        sb.append(", ").append(idx);
        sb.append(", ").append(packageName);
        sb.append(", ").append(className);
        sb.append(", ").append(testCount);
        sb.append(", ").append(passingCount);
        sb.append(", ").append(skippedCount);
        sb.append(", ").append(failureCount);
        sb.append(", ").append(startTs);
        sb.append(", ").append(hostname);
        sb.append(", ").append(duration);
        sb.append(", ").append(systemOut);
        sb.append(", ").append(systemErr);
        sb.append(", ").append(hasSystemOut);
        sb.append(", ").append(hasSystemErr);
        sb.append(", ").append(testSuiteGroupId);
        sb.append(", ").append(fileName);

        sb.append(")");
        return sb.toString();
    }
}
