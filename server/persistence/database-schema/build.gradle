plugins {
    id "com.avast.gradle.docker-compose" version "0.14.13"
    id 'nu.studer.jooq' version '6.0.1'
    id "org.flywaydb.flyway" version "8.4.1"
    id "java-library"
}

repositories {
    mavenCentral()
}

dependencies {
    api "org.flywaydb:flyway-core:8.4.0"
    api "com.zaxxer:HikariCP:5.0.1"
    api 'org.jooq:jooq:3.15.5'

    // Needs to be 'api' scope so the Flyway plugin can see it
    api "org.postgresql:postgresql:$postgresDriverVersion"

    jooqGenerator "org.postgresql:postgresql:$postgresDriverVersion"
}

flyway {
    url = 'jdbc:postgresql://localhost:5433/projektordb'
    user = 'testuser'
    password = 'testpass'
}

jooq {
    version = '3.15.5'

    configurations {
        main {
            generateSchemaSourceOnCompilation = false
            generationTool {
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = 'jdbc:postgresql://localhost:5433/projektordb'
                    user = 'testuser'
                    password = 'testpass'
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    strategy {
                        name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                    }
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        excludes = "flyway_schema_history | shedlock"
                        inputSchema = "public"
                    }
                    generate {
                        relations = true
                        deprecated = false
                        records = true
                        fluentSetters = true
                        pojos = true
                        pojosEqualsAndHashCode = true
                        daos = true
                    }
                    target {
                        packageName = 'projektor.database.generated'
                        directory = 'src/main/java'
                    }
                }
            }
        }
    }
}

generateJooq.inputs.dir("${projectDir}/src/main/resources/db/migration")
generateJooq.outputs.cacheIf { true }

flywayMigrate.dependsOn composeUp
generateJooq.dependsOn flywayMigrate
generateJooq.finalizedBy composeDownForced
