import projektor.plugin.ProjektorManualPublishTask

plugins {
    id 'com.github.psxpaul.execfork'
    id "com.github.node-gradle.node" version "5.0.0"
}

node {
    download = false
}

evaluationDependsOn(':server:server-app')

task projektorPublish(type: ProjektorManualPublishTask) {
    serverUrl = "https://projektorlive.herokuapp.com"
    publishToken = System.getenv("PROJEKTOR_TOKEN") ?: project.findProperty('projektor_publish_token') ?: null
    additionalResultsDirs = ["test-results"]
    attachments = [
            fileTree(dir: 'cypress/screenshots', include: '**/*')
            //,fileTree(dir: 'cypress/videos', include: '**/*')
    ]
    projectName = "functional-test"
}

task cleanResults(type: YarnTask) {
    args = ['clean-results']
}

task functionalTest(type: YarnTask) {
    group = 'verification'
    dependsOn 'startServerDaemon', 'cleanResults'
    args = ['cy:run']
    finalizedBy(projektorPublish)
}

// https://github.com/psxpaul/gradle-execfork-plugin
task startServerDaemon(type: com.github.psxpaul.task.JavaExecFork) {
    dependsOn ':server:server-app:assembleFull','yarnSetup'
    classpath = tasks.getByPath(':server:server-app:shadowJar').outputs.files
    main = 'io.ktor.server.netty.EngineMain'
    stopAfter = functionalTest
    waitForPort = 8080
    waitForOutput = 'Application started'
    timeout = 120
    environment = [
            'PORT': '8080',
            "ATTACHMENT_URL": "http://localhost:9000",
            "ATTACHMENT_BUCKET_NAME": "functionaltest",
            "ATTACHMENT_AUTO_CREATE_BUCKET": "true",
            "ATTACHMENT_ACCESS_KEY": "minio_access_key",
            "ATTACHMENT_SECRET_KEY": "minio_secret_key",
            "MAX_REPORT_AGE_DAYS": "30"
    ]
}
